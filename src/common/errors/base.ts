import { GraphQLError } from 'graphql'

export enum ErrorCode {
  UNAUTHORIZED = 'UNAUTHORIZED',
  FORBIDDEN = 'FORBIDDEN',
  AUTH_VERIFY_CODE = 'AUTH_VERIFY_CODE',
  AUTH_SESSION_TOO_FRESH = 'AUTH_SESSION_TOO_FRESH',
  AUTH_SESSION_EXPIRED = 'AUTH_SESSION_EXPIRED',
  AUTH_SESSION_INVALID = 'AUTH_SESSION_INVALID',
  AUTH_SESSION_PASSWORD_NEEDED = 'AUTH_SESSION_PASSWORD_NEEDED',

  USER_NOT_FOUND = 'USER_NOT_FOUND',

  USERNAME_INVALID = 'USERNAME_INVALID',
  USERNAME_NOT_OCCUPIED = 'USERNAME_NOT_OCCUPIED',

  CHAT_ID_INVALID = 'CHAT_ID_INVALID',
  PEER_ID_INVALID = 'PEER_ID_INVALID',

  PHONE_NUMBER_NOT_FOUND = 'PHONE_NUMBER_NOT_FOUND',
  PHONE_NUMBER_INVALID = 'PHONE_NUMBER_INVALID',
  PHONE_NUMBER_REGISTERED = 'PHONE_NUMBER_REGISTERED',

  API_TOKEN_INVALID = 'API_TOKEN_INVALID',
  API_TOKEN_NOT_PROVIDED = 'API_TOKEN_NOT_PROVIDED',
  API_TOKEN_ALREADY_EXIST = 'API_TOKEN_ALREADY_EXIST',

  QUERY_IS_EMPTY = 'QUERY_IS_EMPTY',
  INVALID_ID = 'INVALID_ID',
  NOT_FOUND_ENTITY = 'NOT_FOUND_ENTITY',
  CONTACT_EXIST = 'CONTACT_EXIST',
  CONTACT_NAME_EMPTY = 'CONTACT_NAME_EMPTY',
  BAD_REQUEST = 'BAD_REQUEST',
}
export class BaseApiError extends GraphQLError {
  public constructor(code: ErrorCode, description: string, method?: string) {
    super(code, {
      extensions: {
        description,
        method,
      },
    })
  }
}
